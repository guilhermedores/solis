version: '3.8'

services:
  # =============================================================================
  # BANCO DE DADOS POSTGRESQL
  # =============================================================================
  postgres:
    image: postgres:15-alpine
    container_name: solis-postgres
    environment:
      POSTGRES_DB: ${DB_NAME:-solis_pdv}
      POSTGRES_USER: ${DB_USER:-solis_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-solis123}
    ports:
      - "5432:5432"
    volumes:
      - ./volumes/db-data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - solis-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-solis_user} -d ${DB_NAME:-solis_pdv}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # =============================================================================
  # SOLIS API - Backend principal (Node.js)
  # =============================================================================
  solis-api:
    build:
      context: ./solis-api
      dockerfile: Dockerfile
    container_name: solis-api
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=3000
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-solis_pdv}
      - DB_USER=${DB_USER:-solis_user}
      - DB_PASSWORD=${DB_PASSWORD:-solis123}
      - JWT_SECRET=${JWT_SECRET:-your-secret-key-change-in-production}
      - CORS_ORIGIN=${CORS_ORIGIN:-*}
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - solis-network
    restart: unless-stopped
    volumes:
      - ./solis-api/src:/app/src
      - ./volumes/api-logs:/app/logs
      - ./volumes/uploads:/app/uploads

  # =============================================================================
  # AGENTE PDV - Serviço local .NET para periféricos
  # =============================================================================
  agente-pdv:
    build:
      context: ./agente-pdv
      dockerfile: Dockerfile
    container_name: solis-agente-pdv
    environment:
      - ASPNETCORE_ENVIRONMENT=${DOTNET_ENV:-Development}
      - ASPNETCORE_URLS=http://+:5000
      - SOLIS_API_URL=http://solis-api:3000
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-solis_pdv}
      - DB_USER=${DB_USER:-solis_user}
      - DB_PASSWORD=${DB_PASSWORD:-solis123}
      - SYNC_INTERVAL=${SYNC_INTERVAL:-300}
    ports:
      - "5000:5000"
    depends_on:
      - solis-api
      - postgres
    networks:
      - solis-network
    restart: unless-stopped
    volumes:
      - ./agente-pdv/src:/app/src
      - ./volumes/pdv-logs:/app/logs
      - ./volumes/fiscal-data:/app/fiscal
      # Acesso aos periféricos USB (descomente no ambiente Linux)
      # - /dev:/dev
    # privileged: true  # Necessário para acesso aos periféricos

  # =============================================================================
  # APP PWA - Aplicação de Caixa/PDV (React/Vue/Angular)
  # =============================================================================
  app-pwa:
    build:
      context: ./app-pwa
      dockerfile: Dockerfile
    container_name: solis-app-pwa
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - REACT_APP_API_URL=http://localhost:3000
      - REACT_APP_AGENTE_URL=http://localhost:5000
    ports:
      - "8080:80"
    depends_on:
      - solis-api
      - agente-pdv
    networks:
      - solis-network
    restart: unless-stopped
    volumes:
      - ./app-pwa/src:/app/src

  # =============================================================================
  # APP ADMIN - Aplicação Web Administrativa (React/Vue/Angular)
  # =============================================================================
  app-admin:
    build:
      context: ./app-admin
      dockerfile: Dockerfile
    container_name: solis-app-admin
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - REACT_APP_API_URL=http://localhost:3000
    ports:
      - "8081:80"
    depends_on:
      - api-nuvem
    networks:
      - solis-network
    restart: unless-stopped
    volumes:
      - ./app-admin/src:/app/src

# =============================================================================
# REDES
# =============================================================================
networks:
  solis-network:
    driver: bridge
    name: solis-pdv-network

# =============================================================================
# VOLUMES
# =============================================================================
volumes:
  db-data:
    driver: local